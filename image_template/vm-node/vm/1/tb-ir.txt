qemu-ir-tb-0-0x7f60eb39192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7f60eb391951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7f60eb39195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7f60eb39196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7f60eb39198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7f60eb39196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7f60eb3919b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7f60eb61a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7f60eb61a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7f60eb61b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7f60eb61b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7f60ebbff1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f60ebbff1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f60ebbf8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7f60ebbff1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7f60eb61c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7f60eb61c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7f60eb61c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7f60eb60efcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ba2848e62a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7f60eb60efdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7f60eb60efe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7f60eb60efd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7f60eb60efd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7f60eb60efe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7f60eb60efd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 69

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7f2b7ec5d92a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7f2b7ec5d951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7f2b7ec5d95b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7f2b7ec5d96c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7f2b7ec5d98e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7f2b7ec5d96c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7f2b7ec5d9b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7f2b7eee6576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7f2b7eee65a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7f2b7eee7970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7f2b7eee7970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x4012d3:
last-opc = 0x74
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rdi,tmp0   opc = 96, op->args = 6
 movi_i64 tmp0,$0x1   opc = 57, op->args = 8
 ext32u_i64 r12,tmp0   opc = 96, op->args = 10
 movi_i64 tmp0,$0x1   opc = 57, op->args = 12
 ext32u_i64 r9,tmp0   opc = 96, op->args = 14
 movi_i64 tmp0,$0x20100000001   opc = 57, op->args = 16
 mov_i64 r8,tmp0   opc = 56, op->args = 18
 movi_i64 tmp11,$0x1   opc = 57, op->args = 20
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 22
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 25
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 29
 movi_i64 tmp11,$0x1   opc = 57, op->args = 31
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 33
 mov_i64 rdx,tmp2   opc = 56, op->args = 36
 mov_i64 tmp0,rcx   opc = 56, op->args = 38
 mov_i64 tmp1,rcx   opc = 56, op->args = 40
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 42
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 45
 movi_i32 cc_op,$0x16   opc = 5, op->args = 47
 movi_i64 tmp11,$0x0   opc = 57, op->args = 49
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 51
 goto_tb $0x0   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4012f7   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 61
 set_label $L0   opc = 1, op->args = 62
 goto_tb $0x1   opc = 115, op->args = 63
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 64
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 66
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 69
 set_label $L1   opc = 1, op->args = 70
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 71

qemu-ir-tb-9-0x4012f7:
last-opc = 0x186
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 movi_i64 tmp1,$0x45   opc = 57, op->args = 8
 mov_i64 tmp0,rcx   opc = 56, op->args = 10
 mov_i64 loc10,tmp0   opc = 56, op->args = 12
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 14
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 17
 mov_i64 cc_src,tmp1   opc = 56, op->args = 19
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 21
 movi_i64 tmp1,$0x29   opc = 57, op->args = 23
 mov_i64 tmp0,rcx   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 loc10,tmp0   opc = 56, op->args = 29
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 31
 mov_i64 tmp7,loc10   opc = 56, op->args = 34
 ext8u_i64 tmp7,tmp7   opc = 94, op->args = 36
 ext8u_i64 tmp3,cc_src   opc = 94, op->args = 38
 movi_i32 cc_op,$0xe   opc = 5, op->args = 40
 discard loc10   opc = 0, op->args = 42
 brcond_i64 tmp7,tmp3,leu [p1: leu, 2] ,$L0   opc = 90, op->args = 43
 goto_tb $0x0   opc = 115, op->args = 47
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 48
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 50
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 53
 set_label $L0   opc = 1, op->args = 54
 goto_tb $0x1   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4013b0   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 61
 set_label $L1   opc = 1, op->args = 62
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 63

qemu-ir-tb-10-0x4013b0:
last-opc = 0x184
 mov_i64 tmp0,r9   opc = 56, op->args = 0
 mov_i64 r10,tmp0   opc = 56, op->args = 2
 mov_i64 tmp1,rcx   opc = 56, op->args = 4
 mov_i64 tmp0,r10   opc = 56, op->args = 6
 movi_i64 tmp11,$0x3f   opc = 57, op->args = 8
 and_i64 tmp1,tmp1,tmp11   opc = 80, op->args = 10
 movi_i64 tmp11,$0x1   opc = 57, op->args = 13
 sub_i64 tmp3,tmp1,tmp11   opc = 72, op->args = 15
 shl_i64 tmp3,tmp0,tmp3   opc = 83, op->args = 18
 shl_i64 tmp0,tmp0,tmp1   opc = 83, op->args = 21
 mov_i64 r10,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x0   opc = 57, op->args = 26
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 28
 neg_i64 tmp12,tmp12   opc = 101, op->args = 32
 and_i64 tmp13,tmp0,tmp12   opc = 80, op->args = 34
 not_i64 tmp14,tmp12   opc = 100, op->args = 37
 and_i64 cc_dst,cc_dst,tmp14   opc = 80, op->args = 39
 or_i64 cc_dst,cc_dst,tmp13   opc = 81, op->args = 42
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 45
 neg_i64 tmp12,tmp12   opc = 101, op->args = 49
 and_i64 tmp13,tmp3,tmp12   opc = 80, op->args = 51
 not_i64 tmp14,tmp12   opc = 100, op->args = 54
 and_i64 cc_src,cc_src,tmp14   opc = 80, op->args = 56
 or_i64 cc_src,cc_src,tmp13   opc = 81, op->args = 59
 movi_i32 tmp5,$0x25   opc = 5, op->args = 62
 movi_i32 tmp15,$0x0   opc = 5, op->args = 64
 mov_i32 tmp16,tmp1   opc = 4, op->args = 66
 setcond_i32 tmp17,tmp16,tmp15,ne [p1: ne, 3]    opc = 6, op->args = 68
 neg_i32 tmp17,tmp17   opc = 50, op->args = 72
 and_i32 tmp18,tmp5,tmp17   opc = 25, op->args = 74
 not_i32 tmp19,tmp17   opc = 49, op->args = 77
 and_i32 cc_op,cc_op,tmp19   opc = 25, op->args = 79
 or_i32 cc_op,cc_op,tmp18   opc = 26, op->args = 82
 mov_i64 tmp0,r10   opc = 56, op->args = 85
 mov_i64 tmp1,r8   opc = 56, op->args = 87
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 89
 discard cc_src   opc = 0, op->args = 92
 discard cc_src2   opc = 0, op->args = 93
 discard cc_op   opc = 0, op->args = 94
 movi_i32 cc_op,$0x19   opc = 5, op->args = 95
 movi_i64 tmp11,$0x0   opc = 57, op->args = 97
 brcond_i64 cc_dst,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 99
 goto_tb $0x0   opc = 115, op->args = 103
 movi_i64 tmp3,$0x4013bf   opc = 57, op->args = 104
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 106
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 109
 set_label $L0   opc = 1, op->args = 110
 goto_tb $0x1   opc = 115, op->args = 111
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 112
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 114
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 117
 set_label $L1   opc = 1, op->args = 118
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 119

qemu-ir-tb-11-0x7f2b7f4cb1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f2b7f4cb1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f2b7f4c4640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 136

qemu-ir-tb-12-0x7f2b7f4cb1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 102

qemu-ir-tb-13-0x7f2b7eee8071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7f2b7eee8081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7f2b7eee80fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 84

qemu-ir-tb-14-0x7f2b7eedafcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ba2848e62a3   opc = 114, op->args = 21

qemu-ir-tb-15-0x7f2b7eedafdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7f2b7eedafe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7f2b7eedafd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 60

qemu-ir-tb-16-0x7f2b7eedafd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7f2b7eedafe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7f2b7eedafd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 69

qemu-ir-tb-17-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 62

qemu-ir-tb-18-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 97

qemu-ir-tb-19-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ba2848e68c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ba2848e68c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ba2848e68c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7fd3c4cef92a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7fd3c4cef951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7fd3c4cef95b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7fd3c4cef96c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7fd3c4cef98e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7fd3c4cef96c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7fd3c4cef9b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7fd3c4f78576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7fd3c4f785a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7fd3c4f79970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7fd3c4f79970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7fd3c555d1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7fd3c555d1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7fd3c5556640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7fd3c555d1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7fd3c4f7a071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7fd3c4f7a081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7fd3c4f7a0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7fd3c4f6cfcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b6276d302a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7fd3c4f6cfdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7fd3c4f6cfe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7fd3c4f6cfd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7fd3c4f6cfd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7fd3c4f6cfe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7fd3c4f6cfd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 69

qemu-ir-tb-14-0x7fd3c555d1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7fd3c555d1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7fd3c5556640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 136

qemu-ir-tb-15-0x7fd3c555d1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 102

qemu-ir-tb-16-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 62

qemu-ir-tb-17-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 97

qemu-ir-tb-18-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7fef5679592a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7fef56795951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7fef5679595b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7fef5679596c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7fef5679598e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7fef5679596c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7fef567959b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7fef56a1e576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7fef56a1e5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7fef56a1f970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7fef56a1f970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x4012d3:
last-opc = 0x74
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rdi,tmp0   opc = 96, op->args = 6
 movi_i64 tmp0,$0x1   opc = 57, op->args = 8
 ext32u_i64 r12,tmp0   opc = 96, op->args = 10
 movi_i64 tmp0,$0x1   opc = 57, op->args = 12
 ext32u_i64 r9,tmp0   opc = 96, op->args = 14
 movi_i64 tmp0,$0x20100000001   opc = 57, op->args = 16
 mov_i64 r8,tmp0   opc = 56, op->args = 18
 movi_i64 tmp11,$0x1   opc = 57, op->args = 20
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 22
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 25
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 29
 movi_i64 tmp11,$0x1   opc = 57, op->args = 31
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 33
 mov_i64 rdx,tmp2   opc = 56, op->args = 36
 mov_i64 tmp0,rcx   opc = 56, op->args = 38
 mov_i64 tmp1,rcx   opc = 56, op->args = 40
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 42
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 45
 movi_i32 cc_op,$0x16   opc = 5, op->args = 47
 movi_i64 tmp11,$0x0   opc = 57, op->args = 49
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 51
 goto_tb $0x0   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4012f7   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 61
 set_label $L0   opc = 1, op->args = 62
 goto_tb $0x1   opc = 115, op->args = 63
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 64
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 66
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 69
 set_label $L1   opc = 1, op->args = 70
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 71

qemu-ir-tb-9-0x4012f7:
last-opc = 0x186
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 movi_i64 tmp1,$0x45   opc = 57, op->args = 8
 mov_i64 tmp0,rcx   opc = 56, op->args = 10
 mov_i64 loc10,tmp0   opc = 56, op->args = 12
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 14
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 17
 mov_i64 cc_src,tmp1   opc = 56, op->args = 19
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 21
 movi_i64 tmp1,$0x29   opc = 57, op->args = 23
 mov_i64 tmp0,rcx   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 loc10,tmp0   opc = 56, op->args = 29
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 31
 mov_i64 tmp7,loc10   opc = 56, op->args = 34
 ext8u_i64 tmp7,tmp7   opc = 94, op->args = 36
 ext8u_i64 tmp3,cc_src   opc = 94, op->args = 38
 movi_i32 cc_op,$0xe   opc = 5, op->args = 40
 discard loc10   opc = 0, op->args = 42
 brcond_i64 tmp7,tmp3,leu [p1: leu, 2] ,$L0   opc = 90, op->args = 43
 goto_tb $0x0   opc = 115, op->args = 47
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 48
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 50
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 53
 set_label $L0   opc = 1, op->args = 54
 goto_tb $0x1   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4013b0   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 61
 set_label $L1   opc = 1, op->args = 62
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 63

qemu-ir-tb-10-0x4013b0:
last-opc = 0x184
 mov_i64 tmp0,r9   opc = 56, op->args = 0
 mov_i64 r10,tmp0   opc = 56, op->args = 2
 mov_i64 tmp1,rcx   opc = 56, op->args = 4
 mov_i64 tmp0,r10   opc = 56, op->args = 6
 movi_i64 tmp11,$0x3f   opc = 57, op->args = 8
 and_i64 tmp1,tmp1,tmp11   opc = 80, op->args = 10
 movi_i64 tmp11,$0x1   opc = 57, op->args = 13
 sub_i64 tmp3,tmp1,tmp11   opc = 72, op->args = 15
 shl_i64 tmp3,tmp0,tmp3   opc = 83, op->args = 18
 shl_i64 tmp0,tmp0,tmp1   opc = 83, op->args = 21
 mov_i64 r10,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x0   opc = 57, op->args = 26
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 28
 neg_i64 tmp12,tmp12   opc = 101, op->args = 32
 and_i64 tmp13,tmp0,tmp12   opc = 80, op->args = 34
 not_i64 tmp14,tmp12   opc = 100, op->args = 37
 and_i64 cc_dst,cc_dst,tmp14   opc = 80, op->args = 39
 or_i64 cc_dst,cc_dst,tmp13   opc = 81, op->args = 42
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 45
 neg_i64 tmp12,tmp12   opc = 101, op->args = 49
 and_i64 tmp13,tmp3,tmp12   opc = 80, op->args = 51
 not_i64 tmp14,tmp12   opc = 100, op->args = 54
 and_i64 cc_src,cc_src,tmp14   opc = 80, op->args = 56
 or_i64 cc_src,cc_src,tmp13   opc = 81, op->args = 59
 movi_i32 tmp5,$0x25   opc = 5, op->args = 62
 movi_i32 tmp15,$0x0   opc = 5, op->args = 64
 mov_i32 tmp16,tmp1   opc = 4, op->args = 66
 setcond_i32 tmp17,tmp16,tmp15,ne [p1: ne, 3]    opc = 6, op->args = 68
 neg_i32 tmp17,tmp17   opc = 50, op->args = 72
 and_i32 tmp18,tmp5,tmp17   opc = 25, op->args = 74
 not_i32 tmp19,tmp17   opc = 49, op->args = 77
 and_i32 cc_op,cc_op,tmp19   opc = 25, op->args = 79
 or_i32 cc_op,cc_op,tmp18   opc = 26, op->args = 82
 mov_i64 tmp0,r10   opc = 56, op->args = 85
 mov_i64 tmp1,r8   opc = 56, op->args = 87
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 89
 discard cc_src   opc = 0, op->args = 92
 discard cc_src2   opc = 0, op->args = 93
 discard cc_op   opc = 0, op->args = 94
 movi_i32 cc_op,$0x19   opc = 5, op->args = 95
 movi_i64 tmp11,$0x0   opc = 57, op->args = 97
 brcond_i64 cc_dst,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 99
 goto_tb $0x0   opc = 115, op->args = 103
 movi_i64 tmp3,$0x4013bf   opc = 57, op->args = 104
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 106
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 109
 set_label $L0   opc = 1, op->args = 110
 goto_tb $0x1   opc = 115, op->args = 111
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 112
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 114
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 117
 set_label $L1   opc = 1, op->args = 118
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 119

qemu-ir-tb-11-0x7fef570031c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7fef570031f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7fef56ffc640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 136

qemu-ir-tb-12-0x7fef570031f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 102

qemu-ir-tb-13-0x7fef56a20071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7fef56a20081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7fef56a200fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 84

qemu-ir-tb-14-0x7fef56a12fcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b6276d302a3   opc = 114, op->args = 21

qemu-ir-tb-15-0x7fef56a12fdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7fef56a12fe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7fef56a12fd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 60

qemu-ir-tb-16-0x7fef56a12fd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7fef56a12fe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7fef56a12fd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 69

qemu-ir-tb-17-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 62

qemu-ir-tb-18-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 97

qemu-ir-tb-19-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b6276d308c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b6276d308c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b6276d308c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7f2c14f3f92a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7f2c14f3f951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7f2c14f3f95b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7f2c14f3f96c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7f2c14f3f98e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7f2c14f3f96c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7f2c14f3f9b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7f2c151c8576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7f2c151c85a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7f2c151c9970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7f2c151c9970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7f2c157ad1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f2c157ad1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f2c157a6640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7f2c157ad1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7f2c151ca071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7f2c151ca081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7f2c151ca0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7f2c151bcfcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b14ac7e52a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7f2c151bcfdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7f2c151bcfe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7f2c151bcfd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7f2c151bcfd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7f2c151bcfe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7f2c151bcfd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 69

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7fe10d52992a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7fe10d529951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7fe10d52995b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7fe10d52996c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7fe10d52998e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7fe10d52996c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7fe10d5299b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7fe10d7b2576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7fe10d7b25a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7fe10d7b3970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7fe10d7b3970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x4012d3:
last-opc = 0x74
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rdi,tmp0   opc = 96, op->args = 6
 movi_i64 tmp0,$0x1   opc = 57, op->args = 8
 ext32u_i64 r12,tmp0   opc = 96, op->args = 10
 movi_i64 tmp0,$0x1   opc = 57, op->args = 12
 ext32u_i64 r9,tmp0   opc = 96, op->args = 14
 movi_i64 tmp0,$0x20100000001   opc = 57, op->args = 16
 mov_i64 r8,tmp0   opc = 56, op->args = 18
 movi_i64 tmp11,$0x1   opc = 57, op->args = 20
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 22
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 25
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 29
 movi_i64 tmp11,$0x1   opc = 57, op->args = 31
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 33
 mov_i64 rdx,tmp2   opc = 56, op->args = 36
 mov_i64 tmp0,rcx   opc = 56, op->args = 38
 mov_i64 tmp1,rcx   opc = 56, op->args = 40
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 42
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 45
 movi_i32 cc_op,$0x16   opc = 5, op->args = 47
 movi_i64 tmp11,$0x0   opc = 57, op->args = 49
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 51
 goto_tb $0x0   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4012f7   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 61
 set_label $L0   opc = 1, op->args = 62
 goto_tb $0x1   opc = 115, op->args = 63
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 64
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 66
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 69
 set_label $L1   opc = 1, op->args = 70
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 71

qemu-ir-tb-9-0x4012f7:
last-opc = 0x186
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 movi_i64 tmp1,$0x45   opc = 57, op->args = 8
 mov_i64 tmp0,rcx   opc = 56, op->args = 10
 mov_i64 loc10,tmp0   opc = 56, op->args = 12
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 14
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 17
 mov_i64 cc_src,tmp1   opc = 56, op->args = 19
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 21
 movi_i64 tmp1,$0x29   opc = 57, op->args = 23
 mov_i64 tmp0,rcx   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 loc10,tmp0   opc = 56, op->args = 29
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 31
 mov_i64 tmp7,loc10   opc = 56, op->args = 34
 ext8u_i64 tmp7,tmp7   opc = 94, op->args = 36
 ext8u_i64 tmp3,cc_src   opc = 94, op->args = 38
 movi_i32 cc_op,$0xe   opc = 5, op->args = 40
 discard loc10   opc = 0, op->args = 42
 brcond_i64 tmp7,tmp3,leu [p1: leu, 2] ,$L0   opc = 90, op->args = 43
 goto_tb $0x0   opc = 115, op->args = 47
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 48
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 50
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 53
 set_label $L0   opc = 1, op->args = 54
 goto_tb $0x1   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4013b0   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 61
 set_label $L1   opc = 1, op->args = 62
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 63

qemu-ir-tb-10-0x4013b0:
last-opc = 0x184
 mov_i64 tmp0,r9   opc = 56, op->args = 0
 mov_i64 r10,tmp0   opc = 56, op->args = 2
 mov_i64 tmp1,rcx   opc = 56, op->args = 4
 mov_i64 tmp0,r10   opc = 56, op->args = 6
 movi_i64 tmp11,$0x3f   opc = 57, op->args = 8
 and_i64 tmp1,tmp1,tmp11   opc = 80, op->args = 10
 movi_i64 tmp11,$0x1   opc = 57, op->args = 13
 sub_i64 tmp3,tmp1,tmp11   opc = 72, op->args = 15
 shl_i64 tmp3,tmp0,tmp3   opc = 83, op->args = 18
 shl_i64 tmp0,tmp0,tmp1   opc = 83, op->args = 21
 mov_i64 r10,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x0   opc = 57, op->args = 26
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 28
 neg_i64 tmp12,tmp12   opc = 101, op->args = 32
 and_i64 tmp13,tmp0,tmp12   opc = 80, op->args = 34
 not_i64 tmp14,tmp12   opc = 100, op->args = 37
 and_i64 cc_dst,cc_dst,tmp14   opc = 80, op->args = 39
 or_i64 cc_dst,cc_dst,tmp13   opc = 81, op->args = 42
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 45
 neg_i64 tmp12,tmp12   opc = 101, op->args = 49
 and_i64 tmp13,tmp3,tmp12   opc = 80, op->args = 51
 not_i64 tmp14,tmp12   opc = 100, op->args = 54
 and_i64 cc_src,cc_src,tmp14   opc = 80, op->args = 56
 or_i64 cc_src,cc_src,tmp13   opc = 81, op->args = 59
 movi_i32 tmp5,$0x25   opc = 5, op->args = 62
 movi_i32 tmp15,$0x0   opc = 5, op->args = 64
 mov_i32 tmp16,tmp1   opc = 4, op->args = 66
 setcond_i32 tmp17,tmp16,tmp15,ne [p1: ne, 3]    opc = 6, op->args = 68
 neg_i32 tmp17,tmp17   opc = 50, op->args = 72
 and_i32 tmp18,tmp5,tmp17   opc = 25, op->args = 74
 not_i32 tmp19,tmp17   opc = 49, op->args = 77
 and_i32 cc_op,cc_op,tmp19   opc = 25, op->args = 79
 or_i32 cc_op,cc_op,tmp18   opc = 26, op->args = 82
 mov_i64 tmp0,r10   opc = 56, op->args = 85
 mov_i64 tmp1,r8   opc = 56, op->args = 87
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 89
 discard cc_src   opc = 0, op->args = 92
 discard cc_src2   opc = 0, op->args = 93
 discard cc_op   opc = 0, op->args = 94
 movi_i32 cc_op,$0x19   opc = 5, op->args = 95
 movi_i64 tmp11,$0x0   opc = 57, op->args = 97
 brcond_i64 cc_dst,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 99
 goto_tb $0x0   opc = 115, op->args = 103
 movi_i64 tmp3,$0x4013bf   opc = 57, op->args = 104
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 106
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 109
 set_label $L0   opc = 1, op->args = 110
 goto_tb $0x1   opc = 115, op->args = 111
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 112
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 114
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 117
 set_label $L1   opc = 1, op->args = 118
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 119

qemu-ir-tb-11-0x7fe10dd971c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7fe10dd971f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7fe10dd90640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 136

qemu-ir-tb-12-0x7fe10dd971f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 102

qemu-ir-tb-13-0x7fe10d7b4071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7fe10d7b4081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7fe10d7b40fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 84

qemu-ir-tb-14-0x7fe10d7a6fcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b14ac7e52a3   opc = 114, op->args = 21

qemu-ir-tb-15-0x7fe10d7a6fdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7fe10d7a6fe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7fe10d7a6fd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 60

qemu-ir-tb-16-0x7fe10d7a6fd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7fe10d7a6fe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7fe10d7a6fd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 69

qemu-ir-tb-17-0x7fe10dd971c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7fe10dd971f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7fe10dd90640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 136

qemu-ir-tb-18-0x7fe10dd971f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 102

qemu-ir-tb-19-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 62

qemu-ir-tb-20-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 97

qemu-ir-tb-21-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b14ac7e58c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b14ac7e58c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b14ac7e58c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7fb5715f592a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7fb5715f5951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7fb5715f595b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7fb5715f596c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7fb5715f598e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7fb5715f596c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7fb5715f59b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7fb57187e576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7fb57187e5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7fb57187f970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7fb57187f970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7fb571e631c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7fb571e631f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7fb571e5c640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7fb571e631f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7fb571880071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7fb571880081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7fb5718800fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7fb571872fcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ac3f8dea2a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7fb571872fdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7fb571872fe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7fb571872fd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7fb571872fd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7fb571872fe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7fb571872fd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 69

qemu-ir-tb-14-0x7fb571e631f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 102

qemu-ir-tb-15-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 62

qemu-ir-tb-16-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 97

qemu-ir-tb-17-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ac3f8dea8c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ac3f8dea8c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ac3f8dea8c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7f92d05e392a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7f92d05e3951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7f92d05e395b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7f92d05e396c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7f92d05e398e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7f92d05e396c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7f92d05e39b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7f92d086c576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7f92d086c5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7f92d086d970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7f92d086d970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7f92d0e511c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f92d0e511f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f92d0e4a640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7f92d0e511f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7f92d086e071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7f92d086e081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7f92d086e0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7f92d0860fcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ace449e72a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7f92d0860fdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7f92d0860fe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7f92d0860fd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7f92d0860fd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7f92d0860fe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7f92d0860fd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 69

qemu-ir-tb-14-0x7f92d0e511c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f92d0e511f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f92d0e4a640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 136

qemu-ir-tb-15-0x7f92d0e511f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 102

qemu-ir-tb-16-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 62

qemu-ir-tb-17-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 97

qemu-ir-tb-18-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7f8b1463b92a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7f8b1463b951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7f8b1463b95b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7f8b1463b96c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7f8b1463b98e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7f8b1463b96c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7f8b1463b9b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7f8b148c4576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7f8b148c45a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7f8b148c5970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7f8b148c5970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x4012d3:
last-opc = 0x74
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rdi,tmp0   opc = 96, op->args = 6
 movi_i64 tmp0,$0x1   opc = 57, op->args = 8
 ext32u_i64 r12,tmp0   opc = 96, op->args = 10
 movi_i64 tmp0,$0x1   opc = 57, op->args = 12
 ext32u_i64 r9,tmp0   opc = 96, op->args = 14
 movi_i64 tmp0,$0x20100000001   opc = 57, op->args = 16
 mov_i64 r8,tmp0   opc = 56, op->args = 18
 movi_i64 tmp11,$0x1   opc = 57, op->args = 20
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 22
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 25
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 29
 movi_i64 tmp11,$0x1   opc = 57, op->args = 31
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 33
 mov_i64 rdx,tmp2   opc = 56, op->args = 36
 mov_i64 tmp0,rcx   opc = 56, op->args = 38
 mov_i64 tmp1,rcx   opc = 56, op->args = 40
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 42
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 45
 movi_i32 cc_op,$0x16   opc = 5, op->args = 47
 movi_i64 tmp11,$0x0   opc = 57, op->args = 49
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 51
 goto_tb $0x0   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4012f7   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 61
 set_label $L0   opc = 1, op->args = 62
 goto_tb $0x1   opc = 115, op->args = 63
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 64
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 66
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 69
 set_label $L1   opc = 1, op->args = 70
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 71

qemu-ir-tb-9-0x4012f7:
last-opc = 0x186
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 movi_i64 tmp1,$0x45   opc = 57, op->args = 8
 mov_i64 tmp0,rcx   opc = 56, op->args = 10
 mov_i64 loc10,tmp0   opc = 56, op->args = 12
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 14
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 17
 mov_i64 cc_src,tmp1   opc = 56, op->args = 19
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 21
 movi_i64 tmp1,$0x29   opc = 57, op->args = 23
 mov_i64 tmp0,rcx   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 loc10,tmp0   opc = 56, op->args = 29
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 31
 mov_i64 tmp7,loc10   opc = 56, op->args = 34
 ext8u_i64 tmp7,tmp7   opc = 94, op->args = 36
 ext8u_i64 tmp3,cc_src   opc = 94, op->args = 38
 movi_i32 cc_op,$0xe   opc = 5, op->args = 40
 discard loc10   opc = 0, op->args = 42
 brcond_i64 tmp7,tmp3,leu [p1: leu, 2] ,$L0   opc = 90, op->args = 43
 goto_tb $0x0   opc = 115, op->args = 47
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 48
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 50
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 53
 set_label $L0   opc = 1, op->args = 54
 goto_tb $0x1   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4013b0   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 61
 set_label $L1   opc = 1, op->args = 62
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 63

qemu-ir-tb-10-0x4013b0:
last-opc = 0x184
 mov_i64 tmp0,r9   opc = 56, op->args = 0
 mov_i64 r10,tmp0   opc = 56, op->args = 2
 mov_i64 tmp1,rcx   opc = 56, op->args = 4
 mov_i64 tmp0,r10   opc = 56, op->args = 6
 movi_i64 tmp11,$0x3f   opc = 57, op->args = 8
 and_i64 tmp1,tmp1,tmp11   opc = 80, op->args = 10
 movi_i64 tmp11,$0x1   opc = 57, op->args = 13
 sub_i64 tmp3,tmp1,tmp11   opc = 72, op->args = 15
 shl_i64 tmp3,tmp0,tmp3   opc = 83, op->args = 18
 shl_i64 tmp0,tmp0,tmp1   opc = 83, op->args = 21
 mov_i64 r10,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x0   opc = 57, op->args = 26
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 28
 neg_i64 tmp12,tmp12   opc = 101, op->args = 32
 and_i64 tmp13,tmp0,tmp12   opc = 80, op->args = 34
 not_i64 tmp14,tmp12   opc = 100, op->args = 37
 and_i64 cc_dst,cc_dst,tmp14   opc = 80, op->args = 39
 or_i64 cc_dst,cc_dst,tmp13   opc = 81, op->args = 42
 setcond_i64 tmp12,tmp1,tmp11,ne [p1: ne, 3]    opc = 58, op->args = 45
 neg_i64 tmp12,tmp12   opc = 101, op->args = 49
 and_i64 tmp13,tmp3,tmp12   opc = 80, op->args = 51
 not_i64 tmp14,tmp12   opc = 100, op->args = 54
 and_i64 cc_src,cc_src,tmp14   opc = 80, op->args = 56
 or_i64 cc_src,cc_src,tmp13   opc = 81, op->args = 59
 movi_i32 tmp5,$0x25   opc = 5, op->args = 62
 movi_i32 tmp15,$0x0   opc = 5, op->args = 64
 mov_i32 tmp16,tmp1   opc = 4, op->args = 66
 setcond_i32 tmp17,tmp16,tmp15,ne [p1: ne, 3]    opc = 6, op->args = 68
 neg_i32 tmp17,tmp17   opc = 50, op->args = 72
 and_i32 tmp18,tmp5,tmp17   opc = 25, op->args = 74
 not_i32 tmp19,tmp17   opc = 49, op->args = 77
 and_i32 cc_op,cc_op,tmp19   opc = 25, op->args = 79
 or_i32 cc_op,cc_op,tmp18   opc = 26, op->args = 82
 mov_i64 tmp0,r10   opc = 56, op->args = 85
 mov_i64 tmp1,r8   opc = 56, op->args = 87
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 89
 discard cc_src   opc = 0, op->args = 92
 discard cc_src2   opc = 0, op->args = 93
 discard cc_op   opc = 0, op->args = 94
 movi_i32 cc_op,$0x19   opc = 5, op->args = 95
 movi_i64 tmp11,$0x0   opc = 57, op->args = 97
 brcond_i64 cc_dst,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 99
 goto_tb $0x0   opc = 115, op->args = 103
 movi_i64 tmp3,$0x4013bf   opc = 57, op->args = 104
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 106
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 109
 set_label $L0   opc = 1, op->args = 110
 goto_tb $0x1   opc = 115, op->args = 111
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 112
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 114
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 117
 set_label $L1   opc = 1, op->args = 118
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 119

qemu-ir-tb-11-0x7f8b14ea91c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f8b14ea91f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f8b14ea2640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 136

qemu-ir-tb-12-0x7f8b14ea91f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 102

qemu-ir-tb-13-0x7f8b148c6071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7f8b148c6081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7f8b148c60fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 84

qemu-ir-tb-14-0x7f8b148b8fcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ace449e72a3   opc = 114, op->args = 21

qemu-ir-tb-15-0x7f8b148b8fdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7f8b148b8fe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7f8b148b8fd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 60

qemu-ir-tb-16-0x7f8b148b8fd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7f8b148b8fe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7f8b148b8fd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 69

qemu-ir-tb-17-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 62

qemu-ir-tb-18-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 97

qemu-ir-tb-19-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ace449e78c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ace449e78c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ace449e78c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7f69530dc92a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7f69530dc951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7f69530dc95b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7f69530dc96c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7f69530dc98e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7f69530dc96c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7f69530dc9b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7f6953365576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7f69533655a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7f6953366970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7f6953366970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7f695394a1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f695394a1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f6953943640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7f695394a1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7f6953367071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7f6953367081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7f69533670fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 84

qemu-ir-tb-0-0x7f249739592a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7f2497395951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7f249739595b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7f249739596c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7f249739598e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7f249739596c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7f24973959b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7f249761e576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7f249761e5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7f249761f970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7f249761f970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x4012d3:
last-opc = 0x74
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rdi,tmp0   opc = 96, op->args = 6
 movi_i64 tmp0,$0x1   opc = 57, op->args = 8
 ext32u_i64 r12,tmp0   opc = 96, op->args = 10
 movi_i64 tmp0,$0x1   opc = 57, op->args = 12
 ext32u_i64 r9,tmp0   opc = 96, op->args = 14
 movi_i64 tmp0,$0x20100000001   opc = 57, op->args = 16
 mov_i64 r8,tmp0   opc = 56, op->args = 18
 movi_i64 tmp11,$0x1   opc = 57, op->args = 20
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 22
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 25
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 29
 movi_i64 tmp11,$0x1   opc = 57, op->args = 31
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 33
 mov_i64 rdx,tmp2   opc = 56, op->args = 36
 mov_i64 tmp0,rcx   opc = 56, op->args = 38
 mov_i64 tmp1,rcx   opc = 56, op->args = 40
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 42
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 45
 movi_i32 cc_op,$0x16   opc = 5, op->args = 47
 movi_i64 tmp11,$0x0   opc = 57, op->args = 49
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 51
 goto_tb $0x0   opc = 115, op->args = 55
 movi_i64 tmp3,$0x4012f7   opc = 57, op->args = 56
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 58
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 61
 set_label $L0   opc = 1, op->args = 62
 goto_tb $0x1   opc = 115, op->args = 63
 movi_i64 tmp3,$0x40130c   opc = 57, op->args = 64
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 66
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 69
 set_label $L1   opc = 1, op->args = 70
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 71

qemu-ir-tb-9-0x7f2497c031c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7f2497c031f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7f2497bfc640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 136

qemu-ir-tb-10-0x7f2497c031f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 102

qemu-ir-tb-11-0x7f2497620071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7f2497620081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7f24976200fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 84

qemu-ir-tb-12-0x7f2497612fcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ac22b46e2a3   opc = 114, op->args = 21

qemu-ir-tb-13-0x7f2497612fdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7f2497612fe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7f2497612fd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 60

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ac22b46e8c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ac22b46e8c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ac22b46e8c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ae6f07e52a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 69

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ae6f07e58c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ae6f07e58c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ae6f07e58c3   opc = 114, op->args = 36

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b090cf4d2a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 69

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b090cf4d8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b090cf4d8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b090cf4d8c3   opc = 114, op->args = 36

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b36d26122a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 69

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b36d26128c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b36d26128c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b36d26128c3   opc = 114, op->args = 36

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2af0953ed2a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 69

qemu-ir-tb-14-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 136

qemu-ir-tb-15-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 102

qemu-ir-tb-16-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 62

qemu-ir-tb-17-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 97

qemu-ir-tb-18-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2af0953ed8c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2af0953ed8c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2af0953ed8c3   opc = 114, op->args = 36

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b57b82f02a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 69

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b57b82f08c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b57b82f08c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b57b82f08c3   opc = 114, op->args = 36

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b11cdde12a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 69

qemu-ir-tb-14-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 136

qemu-ir-tb-15-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 102

qemu-ir-tb-16-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 62

qemu-ir-tb-17-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 97

qemu-ir-tb-18-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b11cdde18c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b11cdde18c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b11cdde18c3   opc = 114, op->args = 36

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 36

qemu-ir-tb-7-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 52

qemu-ir-tb-8-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 136

qemu-ir-tb-9-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 102

qemu-ir-tb-10-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 84

qemu-ir-tb-11-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2b01278f22a3   opc = 114, op->args = 21

qemu-ir-tb-12-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 60

qemu-ir-tb-13-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 69

qemu-ir-tb-14-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 62

qemu-ir-tb-15-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 97

qemu-ir-tb-16-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2b01278f28c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2b01278f28c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2b01278f28c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 36

qemu-ir-tb-6-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 83

qemu-ir-tb-7-0x4015b2:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015b6   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015ea   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 36

qemu-ir-tb-8-0x4012c6:
last-opc = 0x185
 mov_i64 tmp2,rbp   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 2
 mov_i64 rsi,tmp0   opc = 56, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 8
 movi_i64 tmp1,$0x2d   opc = 57, op->args = 10
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 12
 mov_i64 cc_src,tmp1   opc = 56, op->args = 16
 mov_i64 loc10,tmp0   opc = 56, op->args = 18
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 20
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 ext8u_i64 tmp0,cc_dst   opc = 94, op->args = 25
 movi_i32 cc_op,$0xe   opc = 5, op->args = 27
 discard loc10   opc = 0, op->args = 29
 movi_i64 tmp11,$0x0   opc = 57, op->args = 30
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 32
 goto_tb $0x0   opc = 115, op->args = 36
 movi_i64 tmp3,$0x4012d3   opc = 57, op->args = 37
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 39
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 42
 set_label $L0   opc = 1, op->args = 43
 goto_tb $0x1   opc = 115, op->args = 44
 movi_i64 tmp3,$0x401622   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 50
 set_label $L1   opc = 1, op->args = 51
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 52

qemu-ir-tb-9-0x7ffff7def1c0:
last-opc = 0xe8
 movi_i64 tmp1,$0x38   opc = 57, op->args = 0
 mov_i64 tmp0,rsp   opc = 56, op->args = 2
 mov_i64 loc10,tmp0   opc = 56, op->args = 4
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 6
 mov_i64 rsp,tmp0   opc = 56, op->args = 9
 mov_i64 cc_src,tmp1   opc = 56, op->args = 11
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 13
 discard cc_src2   opc = 0, op->args = 15
 discard cc_op   opc = 0, op->args = 16
 mov_i64 tmp2,rsp   opc = 56, op->args = 17
 mov_i64 tmp0,rax   opc = 56, op->args = 19
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 21
 movi_i64 tmp11,$0x8   opc = 57, op->args = 25
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,rcx   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 32
 movi_i64 tmp11,$0x10   opc = 57, op->args = 36
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 38
 mov_i64 tmp0,rdx   opc = 56, op->args = 41
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 43
 movi_i64 tmp11,$0x18   opc = 57, op->args = 47
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 49
 mov_i64 tmp0,rsi   opc = 56, op->args = 52
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 54
 movi_i64 tmp11,$0x20   opc = 57, op->args = 58
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 60
 mov_i64 tmp0,rdi   opc = 56, op->args = 63
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 65
 movi_i64 tmp11,$0x28   opc = 57, op->args = 69
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 tmp0,r8   opc = 56, op->args = 74
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 movi_i64 tmp11,$0x30   opc = 57, op->args = 80
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 82
 mov_i64 tmp0,r9   opc = 56, op->args = 85
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 87
 movi_i64 tmp11,$0x40   opc = 57, op->args = 91
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 93
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 96
 mov_i64 rsi,tmp0   opc = 56, op->args = 100
 movi_i64 tmp11,$0x38   opc = 57, op->args = 102
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 104
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 107
 mov_i64 rdi,tmp0   opc = 56, op->args = 111
 movi_i64 tmp0,$0x7ffff7def1f5   opc = 57, op->args = 113
 movi_i64 tmp11,$0x8   opc = 57, op->args = 115
 sub_i64 tmp2,rsp,tmp11   opc = 72, op->args = 117
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 120
 mov_i64 rsp,tmp2   opc = 56, op->args = 124
 movi_i32 cc_op,$0x11   opc = 5, op->args = 126
 discard loc10   opc = 0, op->args = 128
 movi_i64 tmp3,$0x7ffff7de8640   opc = 57, op->args = 129
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 131
 exit_tb $0x0   opc = 114, op->args = 134
 set_label $L0   opc = 1, op->args = 135
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 136

qemu-ir-tb-10-0x7ffff7def1f5:
last-opc = 0xff
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 r11,tmp0   opc = 56, op->args = 2
 movi_i64 tmp11,$0x30   opc = 57, op->args = 4
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 6
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 9
 mov_i64 r9,tmp0   opc = 56, op->args = 13
 movi_i64 tmp11,$0x28   opc = 57, op->args = 15
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 17
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 20
 mov_i64 r8,tmp0   opc = 56, op->args = 24
 movi_i64 tmp11,$0x20   opc = 57, op->args = 26
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 28
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 31
 mov_i64 rdi,tmp0   opc = 56, op->args = 35
 movi_i64 tmp11,$0x18   opc = 57, op->args = 37
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 39
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 42
 mov_i64 rsi,tmp0   opc = 56, op->args = 46
 movi_i64 tmp11,$0x10   opc = 57, op->args = 48
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 50
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 53
 mov_i64 rdx,tmp0   opc = 56, op->args = 57
 movi_i64 tmp11,$0x8   opc = 57, op->args = 59
 add_i64 tmp2,rsp,tmp11   opc = 71, op->args = 61
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 64
 mov_i64 rcx,tmp0   opc = 56, op->args = 68
 mov_i64 tmp2,rsp   opc = 56, op->args = 70
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 72
 mov_i64 rax,tmp0   opc = 56, op->args = 76
 movi_i64 tmp1,$0x48   opc = 57, op->args = 78
 mov_i64 tmp0,rsp   opc = 56, op->args = 80
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 82
 mov_i64 rsp,tmp0   opc = 56, op->args = 85
 mov_i64 cc_src,tmp1   opc = 56, op->args = 87
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 89
 discard cc_src2   opc = 0, op->args = 91
 discard cc_op   opc = 0, op->args = 92
 mov_i64 tmp0,r11   opc = 56, op->args = 93
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 95
 movi_i32 cc_op,$0x9   opc = 5, op->args = 98
 exit_tb $0x0   opc = 114, op->args = 100
 set_label $L0   opc = 1, op->args = 101
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 102

qemu-ir-tb-11-0x7ffff780c071:
last-opc = 0x75
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 movi_i64 tmp11,$0x8   opc = 57, op->args = 9
 add_i64 tmp3,tmp2,tmp11   opc = 71, op->args = 11
 qemu_ld_i64 tmp4,tmp3,leq,$0x1   opc = 118, op->args = 14
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 18
 movi_i64 tmp11,$0x318   opc = 57, op->args = 21
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 23
 movi_i64 tmp11,$0x358   opc = 57, op->args = 26
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 28
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 31
 movi_i64 tmp11,$0x318   opc = 57, op->args = 36
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 38
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 41
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 46
 mov_i64 tmp0,rdx   opc = 56, op->args = 48
 mov_i64 tmp1,rdx   opc = 56, op->args = 50
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 52
 discard cc_src   opc = 0, op->args = 55
 discard cc_src2   opc = 0, op->args = 56
 discard cc_op   opc = 0, op->args = 57
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 58
 movi_i32 cc_op,$0x18   opc = 5, op->args = 60
 movi_i64 tmp11,$0x0   opc = 57, op->args = 62
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 64
 goto_tb $0x0   opc = 115, op->args = 68
 movi_i64 tmp3,$0x7ffff780c081   opc = 57, op->args = 69
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 71
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 74
 set_label $L0   opc = 1, op->args = 75
 goto_tb $0x1   opc = 115, op->args = 76
 movi_i64 tmp3,$0x7ffff780c0fb   opc = 57, op->args = 77
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 79
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 82
 set_label $L1   opc = 1, op->args = 83
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 84

qemu-ir-tb-12-0x7ffff77fefcf:
last-opc = 0xfffb
 discard cc_dst   opc = 0, op->args = 0
 discard cc_src   opc = 0, op->args = 1
 discard cc_src2   opc = 0, op->args = 2
 discard cc_op   opc = 0, op->args = 3
 movi_i64 tmp0,$0x0   opc = 57, op->args = 4
 ext32u_i64 rax,tmp0   opc = 96, op->args = 6
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 8
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 11
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 15
 movi_i32 cc_op,$0x31   opc = 5, op->args = 17
 exit_tb $0x0   opc = 114, op->args = 19
 set_label $L0   opc = 1, op->args = 20
 exit_tb $0x2ad781a012a3   opc = 114, op->args = 21

qemu-ir-tb-13-0x7ffff77fefdc:
last-opc = 0x79
 add_i64 tmp2,rax,r8   opc = 71, op->args = 0
 mov_i64 tmp0,rdx   opc = 56, op->args = 3
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 5
 movi_i64 tmp1,$0x1   opc = 57, op->args = 9
 mov_i64 tmp0,rax   opc = 56, op->args = 11
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 13
 mov_i64 rax,tmp0   opc = 56, op->args = 16
 mov_i64 cc_src,tmp1   opc = 56, op->args = 18
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 20
 discard cc_src2   opc = 0, op->args = 22
 discard cc_op   opc = 0, op->args = 23
 mov_i64 tmp1,rax   opc = 56, op->args = 24
 mov_i64 tmp0,rcx   opc = 56, op->args = 26
 mov_i64 cc_src,tmp1   opc = 56, op->args = 28
 mov_i64 loc10,tmp0   opc = 56, op->args = 30
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 32
 movi_i32 cc_op,$0x11   opc = 5, op->args = 35
 discard loc10   opc = 0, op->args = 37
 movi_i64 tmp11,$0x0   opc = 57, op->args = 38
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 40
 goto_tb $0x0   opc = 115, op->args = 44
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 45
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 47
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 50
 set_label $L0   opc = 1, op->args = 51
 goto_tb $0x1   opc = 115, op->args = 52
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 53
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 55
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 58
 set_label $L1   opc = 1, op->args = 59
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 60

qemu-ir-tb-14-0x7ffff77fefd8:
last-opc = 0x79
 add_i64 tmp2,rax,rsi   opc = 71, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 3
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 7
 add_i64 tmp2,rax,r8   opc = 71, op->args = 9
 mov_i64 tmp0,rdx   opc = 56, op->args = 12
 qemu_st_i64 tmp0,tmp2,ub,$0x1   opc = 119, op->args = 14
 movi_i64 tmp1,$0x1   opc = 57, op->args = 18
 mov_i64 tmp0,rax   opc = 56, op->args = 20
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 22
 mov_i64 rax,tmp0   opc = 56, op->args = 25
 mov_i64 cc_src,tmp1   opc = 56, op->args = 27
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 29
 discard cc_src2   opc = 0, op->args = 31
 discard cc_op   opc = 0, op->args = 32
 mov_i64 tmp1,rax   opc = 56, op->args = 33
 mov_i64 tmp0,rcx   opc = 56, op->args = 35
 mov_i64 cc_src,tmp1   opc = 56, op->args = 37
 mov_i64 loc10,tmp0   opc = 56, op->args = 39
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 41
 movi_i32 cc_op,$0x11   opc = 5, op->args = 44
 discard loc10   opc = 0, op->args = 46
 movi_i64 tmp11,$0x0   opc = 57, op->args = 47
 brcond_i64 cc_dst,tmp11,ge [p1: ge, 2] ,$L0   opc = 90, op->args = 49
 goto_tb $0x0   opc = 115, op->args = 53
 movi_i64 tmp3,$0x7ffff77fefe9   opc = 57, op->args = 54
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 56
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 59
 set_label $L0   opc = 1, op->args = 60
 goto_tb $0x1   opc = 115, op->args = 61
 movi_i64 tmp3,$0x7ffff77fefd8   opc = 57, op->args = 62
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 67
 set_label $L1   opc = 1, op->args = 68
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 69

qemu-ir-tb-15-0xffffffff811d1b33:
last-opc = 0x75
 mov_i64 tmp0,r10   opc = 56, op->args = 0
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rdi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 r9,r9,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp0,rdx   opc = 56, op->args = 15
 mov_i64 tmp1,rdx   opc = 56, op->args = 17
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 19
 discard cc_src   opc = 0, op->args = 22
 discard cc_src2   opc = 0, op->args = 23
 discard cc_op   opc = 0, op->args = 24
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 25
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 27
 mov_i64 tmp0,r9   opc = 56, op->args = 30
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 32
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 36
 movi_i32 cc_op,$0x18   opc = 5, op->args = 38
 movi_i64 tmp11,$0x0   opc = 57, op->args = 40
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 42
 goto_tb $0x0   opc = 115, op->args = 46
 movi_i64 tmp3,$0xffffffff811d1b47   opc = 57, op->args = 47
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 49
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 52
 set_label $L0   opc = 1, op->args = 53
 goto_tb $0x1   opc = 115, op->args = 54
 movi_i64 tmp3,$0xffffffff811d1b6c   opc = 57, op->args = 55
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 57
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 60
 set_label $L1   opc = 1, op->args = 61
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 62

qemu-ir-tb-16-0xffffffff8138311c:
last-opc = 0x75
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 2
 mov_i64 tmp2,rsi   opc = 56, op->args = 4
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 6
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 10
 mov_i64 tmp2,rdi   opc = 56, op->args = 15
 mov_i64 tmp0,rax   opc = 56, op->args = 17
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 23
 mov_i64 tmp0,rsi   opc = 56, op->args = 25
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 27
 movi_i64 tmp11,$0x1   opc = 57, op->args = 34
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 36
 discard cc_src2   opc = 0, op->args = 39
 discard cc_op   opc = 0, op->args = 40
 mov_i64 rsi,tmp0   opc = 56, op->args = 41
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 43
 mov_i64 tmp0,rdi   opc = 56, op->args = 45
 mov_i64 tmp0,rdi   opc = 56, op->args = 47
 movi_i64 tmp11,$0x1   opc = 57, op->args = 49
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 51
 mov_i64 rdi,tmp0   opc = 56, op->args = 54
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 56
 mov_i64 tmp0,rcx   opc = 56, op->args = 58
 mov_i64 tmp0,rcx   opc = 56, op->args = 60
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 62
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 64
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 67
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 69
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 71
 movi_i32 cc_op,$0x20   opc = 5, op->args = 73
 movi_i64 tmp11,$0x0   opc = 57, op->args = 75
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 77
 goto_tb $0x0   opc = 115, op->args = 81
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 82
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 84
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 87
 set_label $L0   opc = 1, op->args = 88
 goto_tb $0x1   opc = 115, op->args = 89
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 90
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 92
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 95
 set_label $L1   opc = 1, op->args = 96
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 97

qemu-ir-tb-17-0xffffffff8138311e:
last-opc = 0x75
 mov_i64 tmp2,rsi   opc = 56, op->args = 0
 qemu_ld_i64 tmp0,tmp2,ub,$0x2   opc = 118, op->args = 2
 deposit_i64 rax,rax,tmp0,$0x0,$0x8   opc = 88, op->args = 6
 mov_i64 tmp2,rdi   opc = 56, op->args = 11
 mov_i64 tmp0,rax   opc = 56, op->args = 13
 qemu_st_i64 tmp0,tmp2,ub,$0x2   opc = 119, op->args = 15
 mov_i64 tmp0,rsi   opc = 56, op->args = 19
 mov_i64 tmp0,rsi   opc = 56, op->args = 21
=========================
inst: call, 
func_name: cc_compute_c
flags = $0x50
nb_oargs = $1
nb_iargs = $4
nb_cargs = $3
=========================
 call cc_compute_c,$0x50,$1,cc_src,cc_dst,cc_src,cc_src2,cc_op   opc = 2, op->args = 23
 movi_i64 tmp11,$0x1   opc = 57, op->args = 30
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 32
 discard cc_src2   opc = 0, op->args = 35
 discard cc_op   opc = 0, op->args = 36
 mov_i64 rsi,tmp0   opc = 56, op->args = 37
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 39
 mov_i64 tmp0,rdi   opc = 56, op->args = 41
 mov_i64 tmp0,rdi   opc = 56, op->args = 43
 movi_i64 tmp11,$0x1   opc = 57, op->args = 45
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 47
 mov_i64 rdi,tmp0   opc = 56, op->args = 50
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 52
 mov_i64 tmp0,rcx   opc = 56, op->args = 54
 mov_i64 tmp0,rcx   opc = 56, op->args = 56
 movi_i64 tmp11,$0xffffffffffffffff   opc = 57, op->args = 58
 add_i64 tmp0,tmp0,tmp11   opc = 71, op->args = 60
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 63
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 65
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 67
 movi_i32 cc_op,$0x20   opc = 5, op->args = 69
 movi_i64 tmp11,$0x0   opc = 57, op->args = 71
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 73
 goto_tb $0x0   opc = 115, op->args = 77
 movi_i64 tmp3,$0xffffffff8138312c   opc = 57, op->args = 78
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 80
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 83
 set_label $L0   opc = 1, op->args = 84
 goto_tb $0x1   opc = 115, op->args = 85
 movi_i64 tmp3,$0xffffffff8138311e   opc = 57, op->args = 86
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 88
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 91
 set_label $L1   opc = 1, op->args = 92
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 93

qemu-ir-tb-0-0x7ffff758192a:
last-opc = 0x73
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 movi_i64 tmp1,$0x1   opc = 57, op->args = 89
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 91
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 95
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 98
 mov_i64 cc_src,tmp1   opc = 56, op->args = 102
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 104
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 106
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 108
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 111
 mov_i64 rax,tmp0   opc = 56, op->args = 115
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 117
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 119
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 122
 mov_i64 tmp0,rax   opc = 56, op->args = 126
 mov_i64 cc_src,tmp1   opc = 56, op->args = 128
 mov_i64 loc10,tmp0   opc = 56, op->args = 130
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 132
 mov_i64 tmp3,loc10   opc = 56, op->args = 135
 movi_i32 cc_op,$0x11   opc = 5, op->args = 137
 discard loc10   opc = 0, op->args = 139
 brcond_i64 tmp3,cc_src,geu [p1: geu, 2] ,$L0   opc = 90, op->args = 140
 goto_tb $0x0   opc = 115, op->args = 144
 movi_i64 tmp3,$0x7ffff7581951   opc = 57, op->args = 145
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 147
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 150
 set_label $L0   opc = 1, op->args = 151
 goto_tb $0x1   opc = 115, op->args = 152
 movi_i64 tmp3,$0x7ffff758195b   opc = 57, op->args = 153
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 155
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 158
 set_label $L1   opc = 1, op->args = 159
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 160

qemu-ir-tb-1-0x7ffff758196c:
last-opc = 0x72
 movi_i64 tmp11,$0xffffffffffffffe0   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 mov_i64 tmp2,rax   opc = 56, op->args = 11
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 13
 ext32u_i64 rax,tmp0   opc = 96, op->args = 17
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 19
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 21
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 24
 mov_i64 rax,tmp0   opc = 56, op->args = 28
 mov_i64 tmp2,rax   opc = 56, op->args = 30
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 32
 ext32u_i64 rax,tmp0   opc = 96, op->args = 36
 movi_i64 tmp11,$0xffffffffffffffe8   opc = 57, op->args = 38
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 40
 movi_i64 tmp1,$0x1   opc = 57, op->args = 43
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 45
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 49
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 52
 mov_i64 cc_src,tmp1   opc = 56, op->args = 56
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 58
 discard cc_src2   opc = 0, op->args = 60
 discard cc_op   opc = 0, op->args = 61
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 62
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 64
 movi_i64 tmp1,$0x1   opc = 57, op->args = 67
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 69
 add_i64 tmp0,tmp0,tmp1   opc = 71, op->args = 73
 qemu_st_i64 tmp0,tmp2,leq,$0x1   opc = 119, op->args = 76
 mov_i64 cc_src,tmp1   opc = 56, op->args = 80
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 82
 movi_i64 tmp11,$0xfffffffffffffff0   opc = 57, op->args = 84
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 86
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 89
 mov_i64 rax,tmp0   opc = 56, op->args = 93
 movi_i64 tmp11,$0xfffffffffffffff8   opc = 57, op->args = 95
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 97
 qemu_ld_i64 tmp1,tmp2,leq,$0x1   opc = 118, op->args = 100
 mov_i64 tmp0,rax   opc = 56, op->args = 104
 mov_i64 cc_src,tmp1   opc = 56, op->args = 106
 mov_i64 loc10,tmp0   opc = 56, op->args = 108
 sub_i64 cc_dst,tmp0,tmp1   opc = 72, op->args = 110
 mov_i64 tmp3,loc10   opc = 56, op->args = 113
 movi_i32 cc_op,$0x11   opc = 5, op->args = 115
 discard loc10   opc = 0, op->args = 117
 brcond_i64 tmp3,cc_src,ltu [p1: ltu, 2] ,$L0   opc = 90, op->args = 118
 goto_tb $0x0   opc = 115, op->args = 122
 movi_i64 tmp3,$0x7ffff758198e   opc = 57, op->args = 123
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 125
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 128
 set_label $L0   opc = 1, op->args = 129
 goto_tb $0x1   opc = 115, op->args = 130
 movi_i64 tmp3,$0x7ffff758196c   opc = 57, op->args = 131
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 133
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 136
 set_label $L1   opc = 1, op->args = 137
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 138

qemu-ir-tb-2-0x7ffff75819b7:
last-opc = 0xc3
 movi_i64 tmp11,$0xffffffffffffffd8   opc = 57, op->args = 0
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 2
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 5
 mov_i64 rax,tmp0   opc = 56, op->args = 9
 movi_i64 tmp11,$0xffffffffffffffd0   opc = 57, op->args = 11
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 13
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 16
 mov_i64 rcx,tmp0   opc = 56, op->args = 20
 movi_i64 tmp11,$0xffffffffffffffc8   opc = 57, op->args = 22
 add_i64 tmp2,rbp,tmp11   opc = 71, op->args = 24
 qemu_ld_i64 tmp0,tmp2,leq,$0x1   opc = 118, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 31
 movi_i64 tmp4,$0x60000   opc = 57, op->args = 33
=========================
inst: call, 
func_name: crete_make_concolic_internal
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call crete_make_concolic_internal,$0x0,$0,rax,rcx,rdx   opc = 2, op->args = 35
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 40
 movi_i64 tmp11,$0x8   opc = 57, op->args = 44
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 46
 mov_i64 rsp,tmp3   opc = 56, op->args = 49
 mov_i64 rbp,tmp0   opc = 56, op->args = 51
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 53
 movi_i64 tmp11,$0x8   opc = 57, op->args = 57
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 59
 mov_i64 rsp,tmp3   opc = 56, op->args = 62
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 64
 exit_tb $0x0   opc = 114, op->args = 67
 set_label $L0   opc = 1, op->args = 68
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 69

qemu-ir-tb-3-0x7ffff780a576:
last-opc = 0x185
 mov_i64 tmp2,rdi   opc = 56, op->args = 0
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 2
 st_i64 tmp4,env,$0x358   opc = 70, op->args = 6
 mov_i64 tmp2,rsi   opc = 56, op->args = 9
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 11
 st_i64 tmp4,env,$0x398   opc = 70, op->args = 15
 movi_i64 tmp11,$0x8   opc = 57, op->args = 18
 add_i64 tmp2,rdi,tmp11   opc = 71, op->args = 20
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 23
 st_i64 tmp4,env,$0x360   opc = 70, op->args = 27
 movi_i64 tmp11,$0x8   opc = 57, op->args = 30
 add_i64 tmp2,rsi,tmp11   opc = 71, op->args = 32
 qemu_ld_i64 tmp4,tmp2,leq,$0x1   opc = 118, op->args = 35
 st_i64 tmp4,env,$0x3a0   opc = 70, op->args = 39
 movi_i64 tmp11,$0x318   opc = 57, op->args = 42
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 44
 movi_i64 tmp11,$0x318   opc = 57, op->args = 47
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 49
=========================
inst: call, 
func_name: pxor_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pxor_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 52
 movi_i64 tmp11,$0x318   opc = 57, op->args = 57
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 59
 movi_i64 tmp11,$0x358   opc = 57, op->args = 62
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 64
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 67
 movi_i64 tmp11,$0x358   opc = 57, op->args = 72
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 74
 movi_i64 tmp11,$0x398   opc = 57, op->args = 77
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 79
=========================
inst: call, 
func_name: pcmpeqb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call pcmpeqb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 82
 movi_i64 tmp11,$0x358   opc = 57, op->args = 87
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 89
 movi_i64 tmp11,$0x318   opc = 57, op->args = 92
 add_i64 tmp9,env,tmp11   opc = 71, op->args = 94
=========================
inst: call, 
func_name: psubb_xmm
flags = $0x0
nb_oargs = $0
nb_iargs = $3
nb_cargs = $3
=========================
 call psubb_xmm,$0x0,$0,env,tmp8,tmp9   opc = 2, op->args = 97
 movi_i64 tmp11,$0x358   opc = 57, op->args = 102
 add_i64 tmp8,env,tmp11   opc = 71, op->args = 104
=========================
inst: call, 
func_name: pmovmskb_xmm
flags = $0x0
nb_oargs = $1
nb_iargs = $2
nb_cargs = $3
=========================
 call pmovmskb_xmm,$0x0,$1,tmp5,env,tmp8   opc = 2, op->args = 107
 ext32u_i64 rdx,tmp5   opc = 96, op->args = 112
 movi_i64 tmp1,$0xffff   opc = 57, op->args = 114
 mov_i64 tmp0,rdx   opc = 56, op->args = 116
 mov_i64 loc10,tmp0   opc = 56, op->args = 118
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 120
 ext32u_i64 rdx,tmp0   opc = 96, op->args = 123
 mov_i64 cc_src,tmp1   opc = 56, op->args = 125
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 127
 discard cc_src2   opc = 0, op->args = 129
 discard cc_op   opc = 0, op->args = 130
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 131
 movi_i32 cc_op,$0x10   opc = 5, op->args = 133
 discard loc10   opc = 0, op->args = 135
 movi_i64 tmp11,$0x0   opc = 57, op->args = 136
 brcond_i64 tmp0,tmp11,ne [p1: ne, 2] ,$L0   opc = 90, op->args = 138
 goto_tb $0x0   opc = 115, op->args = 142
 movi_i64 tmp3,$0x7ffff780a5a8   opc = 57, op->args = 143
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 145
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 148
 set_label $L0   opc = 1, op->args = 149
 movi_i64 tmp3,$0x7ffff780b970   opc = 57, op->args = 150
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 152
 exit_tb $0x0   opc = 114, op->args = 155
 set_label $L1   opc = 1, op->args = 156
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 157

qemu-ir-tb-4-0x7ffff780b970:
last-opc = 0xc3
 mov_i64 tmp0,rdx   opc = 56, op->args = 0
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 2
 discard cc_src   opc = 0, op->args = 4
 discard cc_src2   opc = 0, op->args = 5
 discard cc_op   opc = 0, op->args = 6
=========================
inst: call, 
func_name: ctz
flags = $0x50
nb_oargs = $1
nb_iargs = $1
nb_cargs = $3
=========================
 call ctz,$0x50,$1,tmp0,tmp0   opc = 2, op->args = 7
 movi_i64 tmp3,$0x0   opc = 57, op->args = 11
 setcond_i64 tmp11,cc_dst,tmp3,eq [p1: eq, 3]    opc = 58, op->args = 13
 neg_i64 tmp11,tmp11   opc = 101, op->args = 17
 and_i64 tmp12,rdx,tmp11   opc = 80, op->args = 19
 not_i64 tmp13,tmp11   opc = 100, op->args = 22
 and_i64 tmp0,tmp0,tmp13   opc = 80, op->args = 24
 or_i64 tmp0,tmp0,tmp12   opc = 81, op->args = 27
 mov_i64 rdx,tmp0   opc = 56, op->args = 30
 add_i64 tmp2,rdx,rsi   opc = 71, op->args = 32
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 35
 ext32u_i64 rcx,tmp0   opc = 96, op->args = 39
 add_i64 tmp2,rdx,rdi   opc = 71, op->args = 41
 qemu_ld_i64 tmp0,tmp2,ub,$0x1   opc = 118, op->args = 44
 ext32u_i64 rax,tmp0   opc = 96, op->args = 48
 mov_i64 tmp1,rcx   opc = 56, op->args = 50
 mov_i64 tmp0,rax   opc = 56, op->args = 52
 mov_i64 loc10,tmp0   opc = 56, op->args = 54
 sub_i64 tmp0,tmp0,tmp1   opc = 72, op->args = 56
 ext32u_i64 rax,tmp0   opc = 96, op->args = 59
 mov_i64 cc_src,tmp1   opc = 56, op->args = 61
 mov_i64 cc_dst,tmp0   opc = 56, op->args = 63
 qemu_ld_i64 tmp0,rsp,leq,$0x1   opc = 118, op->args = 65
 movi_i64 tmp11,$0x8   opc = 57, op->args = 69
 add_i64 tmp3,rsp,tmp11   opc = 71, op->args = 71
 mov_i64 rsp,tmp3   opc = 56, op->args = 74
 st_i64 tmp0,env,$0x80   opc = 70, op->args = 76
 movi_i32 cc_op,$0x10   opc = 5, op->args = 79
 exit_tb $0x0   opc = 114, op->args = 81
 set_label $L0   opc = 1, op->args = 82
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 83

qemu-ir-tb-5-0x4015a1:
last-opc = 0x74
 mov_i64 tmp0,rax   opc = 56, op->args = 0
 mov_i64 tmp1,rax   opc = 56, op->args = 2
 and_i64 cc_dst,tmp0,tmp1   opc = 80, op->args = 4
 discard cc_src   opc = 0, op->args = 7
 discard cc_src2   opc = 0, op->args = 8
 discard cc_op   opc = 0, op->args = 9
 ext32u_i64 tmp0,cc_dst   opc = 96, op->args = 10
 movi_i32 cc_op,$0x18   opc = 5, op->args = 12
 movi_i64 tmp11,$0x0   opc = 57, op->args = 14
 brcond_i64 tmp0,tmp11,eq [p1: eq, 2] ,$L0   opc = 90, op->args = 16
 goto_tb $0x0   opc = 115, op->args = 20
 movi_i64 tmp3,$0x4015a5   opc = 57, op->args = 21
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 23
 exit_tb $0x2ad781a018c0   opc = 114, op->args = 26
 set_label $L0   opc = 1, op->args = 27
 goto_tb $0x1   opc = 115, op->args = 28
 movi_i64 tmp3,$0x4015e3   opc = 57, op->args = 29
 st_i64 tmp3,env,$0x80   opc = 70, op->args = 31
 exit_tb $0x2ad781a018c1   opc = 114, op->args = 34
 set_label $L1   opc = 1, op->args = 35
 exit_tb $0x2ad781a018c3   opc = 114, op->args = 36

